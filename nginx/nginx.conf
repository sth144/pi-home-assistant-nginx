events { }
http {
  server_names_hash_bucket_size 64;
  client_max_body_size 100M;

  # ======================== internal domains (VPN) =================== #
  server {
    listen 80;
    server_name homer;
    location / {
      proxy_pass http://192.168.1.243:8092$request_uri;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  server {
    listen 80;
    server_name home.assistant;
    # include /etc/nginx/snippets/certbot.conf
    access_log /var/log/nginx/example.com-access.log;
    error_log /var/log/nginx/example.com-error.log;
    location / {
      # nginx does not natively support WebSockets, these 4 lines allow WebSockets
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_pass http://192.168.1.243:8123$request_uri;
    }
  }
  
  server {
    listen 80;
    server_name portainer;
    location / {
      proxy_pass http://192.168.1.243:9000$request_uri;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  server {
    listen 80;
    server_name grafana;
    location / {
      proxy_pass http://192.168.1.245:3000$request_uri;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";     
    }
  }
  
  server {
    listen 80;
    server_name prometheus;
    location / {
      proxy_pass http://192.168.1.245:9090$request_uri;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";     
    }
  }

  server {
    listen 80;
    server_name heimdall;
    location / {
      proxy_pass http://192.168.1.243:780$request_uri;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      # TODO: get HTTPS working
    }
  }
  


  # ======================== external domains (DuckDNS, HTTPS, LetsEncrypt SSL) =================== #
  #server {
  #  listen 80;
  #  listen [::]:80;
  #  server_name sthinds144.duckdns.org *.sth144.duckdns.org;

  #  location /.well-known/acme-challenge/ {
  #    root /var/www/certbot;
  #  }

  #  return 301 https://$host$request_uri;
  #}
  server {
    listen 80;
    server_name sth144.duckdns.org *.sth144.duckdns.org;
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
    location / {
      return 301 https://$host$request_uri;
    }
  }
  server {
    listen 443 ssl;
    server_name hass.sth144.duckdns.org;
    ssl_certificate /etc/letsencrypt/live/sth144.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sth144.duckdns.org/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    resolver pi.hole;
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
    location / {
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_pass http://127.0.0.1:8123$request_uri;
    }
  }
  server {
    listen 443 ssl;
    server_name plex.sth144.duckdns.org;
    ssl_certificate /etc/letsencrypt/live/sth144.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sth144.duckdns.org/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    resolver pi.hole;
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
    location / {
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_pass http://plex:32400$request_uri;
    }
  }
  server {
    listen 443 ssl;
    server_name nextcloud.sth144.duckdns.org;
    ssl_certificate /etc/letsencrypt/live/sth144.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sth144.duckdns.org/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    resolver pi.hole;
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }   
    location / {
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_pass http://plex:9080$request_uri;
    }
  }
  server {
    listen 443 ssl;
    server_name nas.sth144.duckdns.org;
    ssl_certificate /etc/letsencrypt/live/sth144.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sth144.duckdns.org/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    resolver pi.hole;
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
    location / {
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_pass http://openmediavault:81$request_uri;
    }
  }
  server {
    listen 443 ssl;
    server_name portainer.sth144.duckdns.org;
    ssl_certificate /etc/letsencrypt/live/sth144.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sth144.duckdns.org/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    resolver pi.hole;
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
    location / {
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_pass http://portainer:9000$request_uri;
    }
  }
  server {
    listen 443 ssl;
    server_name picocluster.sth144.duckdns.org;
    ssl_certificate /etc/letsencrypt/live/sth144.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sth144.duckdns.org/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    resolver pi.hole;
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
    location / {
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_pass https://pc0$request_uri;
    }
  }
  # TODO: expose kubernetes dashboard
}
