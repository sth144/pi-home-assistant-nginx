events { }
http {
  server {
    listen 80;
    server_name home.assistant;
    # include /etc/nginx/snippets/certbot.conf
    access_log /var/log/nginx/example.com-access.log;
    error_log /var/log/nginx/example.com-error.log;
    location / {
      # nginx does not natively support WebSockets, these 4 lines allow WebSockets
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      proxy_pass http://192.168.1.243:8123$request_uri;
    }
  }
  #server {
  #  listen 443 ssl default_server ipv6only=off; # if your nginx version is >= 1.9.5 you can also add the "http2" flag here;
  #  server_name sthinds144.duckdns.org;
  #  ssl_certificate /etc/letsencrypt/live/sthinds144.duckdns.org/fullchain.pem;
  #  ssl_certificate_key /etc/letsencrypt/live/sthinds144.duckdns.org/privkey.pem;
  #  ssl_dhparam /etc/nginx/ssl/dhparams.pem;


  # proxy_buffering off;
  # location /home.assistant {
  #   # nginx does not natively support WebSockets, these 4 lines allow WebSockets
  #   proxy_set_header Host $host;
  #   proxy_http_version 1.1;
  #   proxy_redirect http:// https://;
  #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #  proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection "Upgrade";

  #  proxy_pass https://192.168.1.243:8123$request_uri;
  #  } 
  #}
  server {
    listen 80;
    server_name portainer;
    location / {
      proxy_pass http://192.168.1.243:9000$request_uri;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
  server {
    listen 80;
    server_name grafana;
    location / {
      proxy_pass http://192.168.1.243:3000$request_uri;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";     
    }
  }
  server {
    listen 80;
    server_name prometheus;
    location / {
      proxy_pass http://192.168.1.243:9090$request_uri;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";     
    }
  }
  server {
    listen 80;
    server_name heimdall;
    location / {
      proxy_pass http://192.168.1.243:780$request_uri;
      proxy_http_version 1.1;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      # TODO: get HTTPS working
    }
  }
  server {
    listen 80;
    server_name sthinds144.duckdns.org;
    location /nextcloud/ {
      resolver pi.hole;
      proxy_pass http://nextcloud:80$request_uri;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";     
    }
  }
  # TODO: expose other services via port forwarding
}
